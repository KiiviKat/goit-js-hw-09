{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,gBACrCE,YAAaH,SAASC,cAAc,eACpCG,cAAeJ,SAASC,cAAc,iBACtCI,YAAaL,SAASC,cAAc,kBAGhCK,EAAY,CAACC,EAAUC,KAC3BC,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,EAGpEI,EAAW,CAACL,EAAUC,KAC1BC,EAAAb,GAASc,OAAOG,QAAQ,sBAAoBN,QAAeC,MAAU,EAGvE,SAASM,EAAcP,EAAUC,GAC/B,OAAO,IAAIO,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAM,C,SAAEf,E,MAAUC,GAEpBW,EACFH,EAAQM,GAERL,EAAOK,EAAI,GAEZd,EAAM,G,CAIbV,EAAKC,OAAOwB,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAaC,OAAO7B,EAAKI,aAAa0B,OAC1C,MAAMC,EAAYF,OAAO7B,EAAKK,YAAYyB,OACpCE,EAAcH,OAAO7B,EAAKM,cAAcwB,OAE9C,IAAK,IAAIrB,EAAW,EAAGA,GAAYuB,EAAavB,GAAY,EAC1DO,EAAcP,EAAUmB,GACrBK,MAAKC,GAAO1B,EAAU0B,EAAIzB,SAAUyB,EAAIxB,SACxCyB,OAAMC,GAAStB,EAASsB,EAAM3B,SAAU2B,EAAM1B,SAEjDkB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputDelayEl: document.querySelector('[name=delay]'),\n  inputStepEl: document.querySelector('[name=step]'),\n  inputAmountEl: document.querySelector('[name=amount]'),\n  submitBtnEl: document.querySelector('[type=submit]'),\n};\n\nconst onSuccess = (position, delay) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onReject = (position, delay) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const obj = { position, delay };\n\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delayValue = Number(refs.inputDelayEl.value);\n  const stepValue = Number(refs.inputStepEl.value);\n  const amountValue = Number(refs.inputAmountEl.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delayValue)\n      .then(res => onSuccess(res.position, res.delay))\n      .catch(error => onReject(error.position, error.delay));\n\n    delayValue += stepValue;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","submitBtnEl","$47d4ff9957288465$var$onSuccess","position","delay","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onReject","failure","$47d4ff9957288465$var$createPromise","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","obj","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","then","res","catch","error"],"version":3,"file":"03-promises.0a338022.js.map"}