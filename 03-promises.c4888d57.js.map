{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,gBACrCE,YAAaH,SAASC,cAAc,eACpCG,cAAeJ,SAASC,cAAc,iBACtCI,YAAaL,SAASC,cAAc,kBAGhCK,EAAY,SAACC,EAAUC,GAC3BC,EAAAb,GAASc,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,EAGlEK,EAAW,SAACN,EAAUC,GAC1BC,EAAAb,GAASc,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,EAGrE,SAASO,EAAcR,EAAUC,GAC/B,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAM,CAAEhB,WAAUC,SAEpBY,EACFH,EAAQM,GAERL,EAAOK,E,GAERf,E,IAIPV,EAAKC,OAAOyB,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAaC,OAAO9B,EAAKI,aAAa2B,OACpCC,EAAYF,OAAO9B,EAAKK,YAAY0B,OACpCE,EAAcH,OAAO9B,EAAKM,cAAcyB,OAErCtB,EAAW,EAAGA,GAAYwB,EAAaxB,GAAY,EAC1DQ,EAAcR,EAAUoB,GACrBK,MAAK,SAAAC,G,OAAO3B,EAAU2B,EAAI1B,SAAU0B,EAAIzB,M,IACxC0B,OAAM,SAAAC,G,OAAStB,EAASsB,EAAM5B,SAAU4B,EAAM3B,M,IAEjDmB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputDelayEl: document.querySelector('[name=delay]'),\n  inputStepEl: document.querySelector('[name=step]'),\n  inputAmountEl: document.querySelector('[name=amount]'),\n  submitBtnEl: document.querySelector('[type=submit]'),\n};\n\nconst onSuccess = (position, delay) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onReject = (position, delay) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const obj = { position, delay };\n\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delayValue = Number(refs.inputDelayEl.value);\n  const stepValue = Number(refs.inputStepEl.value);\n  const amountValue = Number(refs.inputAmountEl.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delayValue)\n      .then(res => onSuccess(res.position, res.delay))\n      .catch(error => onReject(error.position, error.delay));\n\n    delayValue += stepValue;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","submitBtnEl","$ce04d3a99e08e73b$var$onSuccess","position","delay","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onReject","failure","$ce04d3a99e08e73b$var$createPromise","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","obj","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","then","res","catch","error"],"version":3,"file":"03-promises.c4888d57.js.map"}